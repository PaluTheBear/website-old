{"ast":null,"code":"var _jsxFileName = \"/Users/paulmayer/Projects/paluthebear.github.io/src/header/Darkmode.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./DarkMode.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DARK = \"Dark\";\nconst LIGHT = \"Light\";\nconst THEME = \"theme\";\nconst COLOR_THEME = \"color-theme\";\n\nconst Darkmode = () => {\n  _s();\n\n  const isMobile = window.innerWidth <= 768;\n  const storedTheme = localStorage.getItem(THEME) || LIGHT;\n  const preferredDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [displayed, setDisplayed] = useState(DARK);\n  useEffect(() => {\n    if (isMobile) {\n      preferredDark ? setDarkMode() : setLightMode();\n    } else if (storedTheme === LIGHT) {\n      setLightMode();\n    } else if (storedTheme === DARK) {\n      setDarkMode();\n    } else {\n      preferredDark ? setDarkMode() : setLightMode();\n    }\n  }, []);\n\n  const setDarkMode = () => {\n    localStorage.setItem(THEME, DARK);\n    document.documentElement.setAttribute(COLOR_THEME, DARK);\n    setDisplayed(LIGHT);\n  };\n\n  const setLightMode = () => {\n    localStorage.setItem(THEME, LIGHT);\n    document.documentElement.setAttribute(COLOR_THEME, LIGHT);\n    setDisplayed(DARK);\n  };\n\n  const toggleTheme = () => {\n    if (displayed === LIGHT) {\n      setLightMode();\n    } else if (displayed === DARK) {\n      setDarkMode();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"darkmode-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      onClick: toggleTheme,\n      children: displayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Darkmode, \"X0xgPIGNoenZ8qh32Bjk0iDL1eg=\");\n\n_c = Darkmode;\nexport default Darkmode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Darkmode\");","map":{"version":3,"names":["useEffect","useState","DARK","LIGHT","THEME","COLOR_THEME","Darkmode","isMobile","window","innerWidth","storedTheme","localStorage","getItem","preferredDark","matchMedia","matches","displayed","setDisplayed","setDarkMode","setLightMode","setItem","document","documentElement","setAttribute","toggleTheme"],"sources":["/Users/paulmayer/Projects/paluthebear.github.io/src/header/Darkmode.tsx"],"sourcesContent":["import \"./DarkMode.css\"\nimport {useEffect, useState} from \"react\";\nimport {ifError} from \"assert\";\n\nconst DARK = \"Dark\";\nconst LIGHT = \"Light\";\nconst THEME = \"theme\";\nconst COLOR_THEME = \"color-theme\"\n\nconst Darkmode = () => {\n    const isMobile = window.innerWidth <= 768;\n    const storedTheme = localStorage.getItem(THEME) || LIGHT;\n    const preferredDark =\n        window.matchMedia &&\n        window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    const [displayed, setDisplayed] = useState(DARK)\n\n    useEffect(() => {\n        if (isMobile) {\n            preferredDark ? setDarkMode() : setLightMode();\n        } else if (storedTheme === LIGHT) {\n            setLightMode();\n        } else if (storedTheme === DARK){\n            setDarkMode();\n        } else {\n            preferredDark ? setDarkMode() : setLightMode();\n        }\n    }, [])\n\n    const setDarkMode = () => {\n        localStorage.setItem(THEME, DARK);\n        document.documentElement.setAttribute(COLOR_THEME, DARK);\n        setDisplayed(LIGHT);\n    }\n\n    const setLightMode = () => {\n        localStorage.setItem(THEME, LIGHT);\n        document.documentElement.setAttribute(COLOR_THEME,  LIGHT)\n        setDisplayed(DARK);\n    }\n\n    const toggleTheme = () => {\n        if (displayed === LIGHT) {\n            setLightMode()\n        } else if (displayed === DARK) {\n            setDarkMode()\n        }\n    }\n\n    return (\n        <div className=\"darkmode-wrapper\">\n            <span onClick={toggleTheme}>{displayed}</span>\n        </div>\n    );\n};\n\n\nexport default Darkmode;\n"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;;AAGA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,KAAK,GAAG,OAAd;AACA,MAAMC,WAAW,GAAG,aAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EACnB,MAAMC,QAAQ,GAAGC,MAAM,CAACC,UAAP,IAAqB,GAAtC;EACA,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBR,KAArB,KAA+BD,KAAnD;EACA,MAAMU,aAAa,GACfL,MAAM,CAACM,UAAP,IACAN,MAAM,CAACM,UAAP,CAAkB,8BAAlB,EAAkDC,OAFtD;EAIA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAACC,IAAD,CAA1C;EAEAF,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAJ,EAAc;MACVM,aAAa,GAAGK,WAAW,EAAd,GAAmBC,YAAY,EAA5C;IACH,CAFD,MAEO,IAAIT,WAAW,KAAKP,KAApB,EAA2B;MAC9BgB,YAAY;IACf,CAFM,MAEA,IAAIT,WAAW,KAAKR,IAApB,EAAyB;MAC5BgB,WAAW;IACd,CAFM,MAEA;MACHL,aAAa,GAAGK,WAAW,EAAd,GAAmBC,YAAY,EAA5C;IACH;EACJ,CAVQ,EAUN,EAVM,CAAT;;EAYA,MAAMD,WAAW,GAAG,MAAM;IACtBP,YAAY,CAACS,OAAb,CAAqBhB,KAArB,EAA4BF,IAA5B;IACAmB,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsClB,WAAtC,EAAmDH,IAAnD;IACAe,YAAY,CAACd,KAAD,CAAZ;EACH,CAJD;;EAMA,MAAMgB,YAAY,GAAG,MAAM;IACvBR,YAAY,CAACS,OAAb,CAAqBhB,KAArB,EAA4BD,KAA5B;IACAkB,QAAQ,CAACC,eAAT,CAAyBC,YAAzB,CAAsClB,WAAtC,EAAoDF,KAApD;IACAc,YAAY,CAACf,IAAD,CAAZ;EACH,CAJD;;EAMA,MAAMsB,WAAW,GAAG,MAAM;IACtB,IAAIR,SAAS,KAAKb,KAAlB,EAAyB;MACrBgB,YAAY;IACf,CAFD,MAEO,IAAIH,SAAS,KAAKd,IAAlB,EAAwB;MAC3BgB,WAAW;IACd;EACJ,CAND;;EAQA,oBACI;IAAK,SAAS,EAAC,kBAAf;IAAA,uBACI;MAAM,OAAO,EAAEM,WAAf;MAAA,UAA6BR;IAA7B;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CA9CD;;GAAMV,Q;;KAAAA,Q;AAiDN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}